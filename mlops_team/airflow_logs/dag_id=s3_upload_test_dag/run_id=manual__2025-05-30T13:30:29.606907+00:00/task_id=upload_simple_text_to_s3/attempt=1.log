[2025-05-30T13:30:32.703+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-05-30T13:30:32.712+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: s3_upload_test_dag.upload_simple_text_to_s3 manual__2025-05-30T13:30:29.606907+00:00 [queued]>
[2025-05-30T13:30:32.715+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: s3_upload_test_dag.upload_simple_text_to_s3 manual__2025-05-30T13:30:29.606907+00:00 [queued]>
[2025-05-30T13:30:32.715+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2025-05-30T13:30:32.726+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): upload_simple_text_to_s3> on 2025-05-30 13:30:29.606907+00:00
[2025-05-30T13:30:32.729+0000] {standard_task_runner.py:63} INFO - Started process 126 to run task
[2025-05-30T13:30:32.731+0000] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 's3_upload_test_dag', 'upload_simple_text_to_s3', 'manual__2025-05-30T13:30:29.606907+00:00', '--job-id', '10', '--raw', '--subdir', 'DAGS_FOLDER/s3_upload_test_dag.py', '--cfg-path', '/tmp/tmpzvea4wpw']
[2025-05-30T13:30:32.732+0000] {standard_task_runner.py:91} INFO - Job 10: Subtask upload_simple_text_to_s3
[2025-05-30T13:30:32.756+0000] {task_command.py:426} INFO - Running <TaskInstance: s3_upload_test_dag.upload_simple_text_to_s3 manual__2025-05-30T13:30:29.606907+00:00 [running]> on host 11278d4fdc5c
[2025-05-30T13:30:32.791+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='s3_upload_test_dag' AIRFLOW_CTX_TASK_ID='upload_simple_text_to_s3' AIRFLOW_CTX_EXECUTION_DATE='2025-05-30T13:30:29.606907+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-05-30T13:30:29.606907+00:00'
[2025-05-30T13:30:32.791+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-05-30T13:30:32.802+0000] {logging_mixin.py:188} INFO - Attempting to upload to S3: s3://mlops-prj/airflow_tests/hello_from_dag.txt
[2025-05-30T13:30:32.802+0000] {logging_mixin.py:188} INFO - File content: Hello S3 from Airflow DAG! This file was uploaded at 2025-05-30T22:30:32.801723+09:00.
[2025-05-30T13:30:32.809+0000] {base.py:84} INFO - Using connection ID 'aws_s3_default' for task execution.
[2025-05-30T13:30:32.810+0000] {connection_wrapper.py:384} INFO - AWS Connection (conn_id='aws_s3_default', conn_type='aws') credentials retrieved from login and password.
[2025-05-30T13:30:33.400+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-05-30T13:30:33.401+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/s3_upload_test_dag.py", line 25, in upload_text_to_s3_callable
    s3_hook.load_string(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 135, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 89, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 1149, in load_string
    self._upload_file_obj(f, key, bucket_name, replace, encrypt, acl_policy)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 1232, in _upload_file_obj
    client.upload_fileobj(
  File "/home/airflow/.local/lib/python3.12/site-packages/boto3/s3/inject.py", line 642, in upload_fileobj
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/s3transfer/futures.py", line 103, in result
    return self._coordinator.result()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/s3transfer/futures.py", line 266, in result
    raise self._exception
  File "/home/airflow/.local/lib/python3.12/site-packages/s3transfer/tasks.py", line 139, in __call__
    return self._execute_main(kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/s3transfer/tasks.py", line 162, in _execute_main
    return_value = self._main(**kwargs)
                   ^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/s3transfer/upload.py", line 764, in _main
    client.put_object(Bucket=bucket, Key=key, Body=body, **extra_args)
  File "/home/airflow/.local/lib/python3.12/site-packages/botocore/client.py", line 553, in _api_call
    return self._make_api_call(operation_name, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/botocore/client.py", line 1009, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.exceptions.ClientError: An error occurred (InvalidAccessKeyId) when calling the PutObject operation: The AWS Access Key Id you provided does not exist in our records.
[2025-05-30T13:30:33.416+0000] {taskinstance.py:1206} INFO - Marking task as FAILED. dag_id=s3_upload_test_dag, task_id=upload_simple_text_to_s3, run_id=manual__2025-05-30T13:30:29.606907+00:00, execution_date=20250530T133029, start_date=20250530T133032, end_date=20250530T133033
[2025-05-30T13:30:33.427+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 10 for task upload_simple_text_to_s3 (An error occurred (InvalidAccessKeyId) when calling the PutObject operation: The AWS Access Key Id you provided does not exist in our records.; 126)
[2025-05-30T13:30:33.476+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2025-05-30T13:30:33.485+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-05-30T13:30:33.487+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
